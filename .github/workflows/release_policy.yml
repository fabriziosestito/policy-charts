name: Release Policy

on:
  workflow_dispatch:
    inputs:
      owner:
        description: "Owner"
        required: true
        type: string
      repo:
        description: "Repository"
        required: true
        type: string
      tag:
        description: "Tag to release"
        required: true
        type: string
  repository_dispatch:
    types: [release-policy]

jobs:
  release-policy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3

      - name: Extract repository info
        id: repo-info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "owner=${{ github.event.inputs.owner }}" >> $GITHUB_OUTPUT
            echo "repo=${{ github.event.inputs.repo }}" >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "owner=${{ github.event.client_payload.owner }}" >> $GITHUB_OUTPUT
            echo "repo=${{ github.event.client_payload.repo }}" >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.client_payload.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Clone source repository
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.repo-info.outputs.owner }}/${{ steps.repo-info.outputs.repo }}
          ref: ${{ steps.repo-info.outputs.tag }}
          path: policy-source

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Create directory structure
        run: |
          TARGET_DIR="charts/${{ steps.repo-info.outputs.repo }}"
          mkdir -p "$TARGET_DIR"

          if [ ! -f "policy-source/README.md" ]; then
            echo "::error::README.md file not found in the source repository"
            exit 1
          fi

          if [ ! -f "policy-source/LICENSE" ]; then
            echo "::error::LICENSE file not found in the source repository"
            exit 1
          fi

          cp "policy-source/README.md" "$TARGET_DIR/"
          cp "policy-source/LICENSE" "$TARGET_DIR/"

          if [ -f "policy-source/questions-ui.yml" ]; then
            cp "policy-source/questions-ui.yml" "$TARGET_DIR/questions.yaml"
          else
            echo "::warning::questions-ui.yml file not found in the source repository"
          fi

      - name: Generate Chart.yaml
        run: |
          TARGET_DIR="charts/${{ steps.repo-info.outputs.repo }}"

          cd pkg2chart

          go run main.go \
            --pkg ../policy-source/artifacthub-pkg.yml \
            --repo ../policy-source/artifacthub-repo.yml \
            --output ../$TARGET_DIR/Chart.yaml

          cd ..

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: update policy ${{ steps.repo-info.outputs.repo }} to ${{ steps.repo-info.outputs.tag }}"
          body: |
            Updates policy to ${{ steps.repo-info.outputs.repo }} ${{ steps.repo-info.outputs.tag }}
          commit-message: "chore: update policy ${{ steps.repo-info.outputs.repo }} to ${{ steps.repo-info.outputs.tag }}"
          add-paths: |
            charts
          branch: update-policy-${{ steps.repo-info.outputs.repo }}-${{ steps.repo-info.outputs.tag }}
          base: main
          delete-branch: true
